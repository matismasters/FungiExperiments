---
import Layout from "../../layouts/Layout.astro";
import {experimentHasSubstratums} from "../../db/substratums.js"


/*Check to see if the experiment already has substratums or not, we only select the id and limit the response 
to 1 since we are not interested in the data per se*/
const experimentID = Astro.url.searchParams.get('id') || '';
//check if the experiment already has substratums or not, in case it doesnt we allow the user to insert them
const {data:hasSubstratums,error} = await experimentHasSubstratums(experimentID)

const doesNotHaveSubstratums = !hasSubstratums 

---

<Layout title="Add photos">

<div class="form-container">
 
    <label for="input-image" class="label-upload-image">Sacar foto</label>

    <img class="show-img"/>


    <!--We only allow adding the substratums if the experiment doesnt have any-->
    {doesNotHaveSubstratums && 
        <div class="substratum-section"/>

        <button class="button-add-substratum">Agregar Sustrato</button>
    }

    <button class="send-data">Subir Datos</button>
    <input class="input-image" id="input-image" type="file"  accept="image/*" capture style="visibility: hidden;">

</div>
</Layout>

<script type="module">
    //Get all the substratums to load the select options
    const resSubstratums = await fetch(`${window.origin}/api/substratums`)
    const substratums = await resSubstratums.json() 
    //Img element used for displaying the photo taken
    const showImage = document.querySelector(".show-img") 
    const inputFile = document.querySelector(".input-image")
    const buttonAddSubstratum = document.querySelector(".button-add-substratum")
    const buttonSendData = document.querySelector(".send-data")

    //img data
    let imgBase64;
    let imageName="";

    inputFile.addEventListener("change", async() => imgBase64 = await readAndReturnImage())  //load the file into imgBase64 when a photo is taken
    buttonAddSubstratum?.addEventListener("click",addSubstratumElementToDom) //create select with options and append it to the dom
    buttonSendData.addEventListener("click",sendData)

    function readAndReturnImage(){
        return new Promise((res,rej)=>{
            try{
                const currentFile = inputFile.files[inputFile.files.length-1]
                const reader = new FileReader()
                reader.onloadend = ()=>{
                    loadImageToBackground(currentFile,showImage)
                    storeFileName(currentFile.name)
                    res(reader.result)
                }
                reader.readAsDataURL(currentFile)
            }catch(e){
                rej(e)
            }
        })
    }
    function storeFileName(name){
        let timeStamp = Date.now().toString()
        const nameWithTimestamp = timeStamp+=name
        imageName = nameWithTimestamp
    }

    function loadImageToBackground(currentFile,imgElement){
        const src = URL.createObjectURL(currentFile)
        imgElement.src = src
    }
    //only run this in case that we are on an experiment that needs adding the substratums
    function percentagesSum100(){
        //if there isnt a substratum selection, that means that this experiment doesn't need to add substratums, therefore we don't check the sum
        const substratumSection = document.querySelector(".substratum-section")
        if(!substratumSection) return true

        const allInputs = document.querySelectorAll(".substratum-number")  
    
        let sum = 0 
        allInputs.forEach((n)=>{
            sum+= n.valueAsNumber
        })
      
        return sum == 100
    }
  
    async function sendData(){
        if(!imgBase64){
            alert("No se ha elegido ninguna foto")
            return
        }
        if(!percentagesSum100()){
            alert("Los porcentajes no suman 100%")
            return
        }
     
        const urlParams = new URLSearchParams(window.location.search);
        const experimentId = urlParams.get("id")

        //create payload to post to the server
        const payload = {
            exp_id:experimentId,
            iter_foto:imageName,
            base64Foto:imgBase64,
            sustratos:[]
        }
        //load all the substratum data to the payload
        const substratums = document.querySelectorAll(".select-substratum")
        const substratumPercentages = document.querySelectorAll(".substratum-number")
        //load the payload with all the substratums selected
        for(let i=0;i<substratums.length;i++){
            const toAdd = {
                exp_id:experimentId,
                sustrato_id:substratums[i].value,
                porcentaje: substratumPercentages[i].value
            }
            payload.sustratos.push(toAdd)
        }
        
        //upload the data to sql
        const res = await fetch(`${window.origin}/api/iterations`,{
            method:"POST",
            body:JSON.stringify(payload)
        })
        if(res.status!=201){
            alert("Algo salio mal")
            return
        }
        alert("joya")
    }   

    //adds the html element to insert the substratum quantity
    function addSubstratumElementToDom(){
        if(substratums?.length ==0){
            alert("No se han podido cargar los sustratos")
            return
        }
        //main div that will be added to the dom, its a row that contains a column and a delete button
        const main = document.createElement("div")
        main.className = "substratum-container-row"

        //main column
        const mainCol = document.createElement("div")
        mainCol.className = "substratum-container-col"

        //Create the select and load with all the options that came from the API
        const select = document.createElement("select")
        select.className = "select-substratum"
        substratums.forEach(s=>{
            const option = document.createElement("option")
            option.value = s.id
            option.textContent = s.nombre
            select.appendChild(option)
        })
        mainCol.appendChild(select)

        //percentage of that substratum
        const inputNumber = document.createElement("input")
        inputNumber.className="substratum-number"
        inputNumber.type = "number"
        inputNumber.placeholder ="Porcentaje"
        mainCol.appendChild(inputNumber)

        //add the whole column to the main div
        main.appendChild(mainCol)

        //button to remove the element
        const removeButton = document.createElement("button")
        removeButton.className = "button-remove-substratum"
        removeButton.textContent="X"
        removeButton.addEventListener("click",()=>main.remove())
        main.appendChild(removeButton)
        //append it to the dom
        document.querySelector(".substratum-section").appendChild(main)
    }
</script>

<style is:inline> 
    .content{
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        transition: all 0.2s ease-in;
        overflow: hidden;
    }
    .label-upload-image{
        color: black;
        cursor: pointer;
        padding: 20px;
        background-color: wheat;
        border-radius: 10px;
        font-size: xx-large;
        font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .form-container{
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 20px;
    }
    img{
        max-width: 50%;
       
    }

    .substratum-section{
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }
    .substratum-container-row{
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        gap: 10px;
       
    }
    .button-remove-substratum{
        font-size: xx-large;
        background-color: wheat;
        color: rgb(233, 69, 69);
        border-width: 0px;
        cursor: pointer;
    }
    .substratum-container-col{
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        width: 100%;
    }
    .substratum-container-col input{
        width: 200px;
        padding: 0px;
        box-sizing: border-box;
        font-size: x-large;
    }.substratum-container-col select{
        width: 200px;
        font-size: x-large;
    }
    .button-add-substratum{
        background-color: wheat;
        color: rgb(0, 0, 0);
        border-radius: 10px;
        border-width: 0px;
        cursor: pointer;
        font-size: large;
        padding: 10px;
        margin: 10px;
        font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    .send-data{
        background-color: wheat;
        font-size: xx-large;
        cursor: pointer;
        border-width: 0px;
        border-radius: 10px;
    }


</style>