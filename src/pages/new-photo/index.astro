---
import Layout from "../../layouts/Layout.astro";
const experimentID = Astro.url.searchParams.get('id') || '';

const firstPhoto = true

---

<Layout title="Add photos">

<div class="form-container">
    <label for="input-image" class="label-upload-image">Sacar foto</label>

    <img class="show-img"/>


    <!--We only allow adding the substratums if we are taking the first photo-->
    {firstPhoto && 
        <div class="substratum-section"/>
        

        <button class="button-add-substratum">Agregar Sustrato</button>
    }

    <button class="send-data">Subir Datos</button>
    <input class="input-image" id="input-image" type="file"  accept="image" capture style="visibility: hidden;">


</div>
</Layout>

<script type="module">
    //Get all the 
    const resSubstratums = await fetch(`${window.origin}/api/substratums`)
    const substratums = await resSubstratums.json() 
    //Img element used for displaying the photo taken
    const showImage = document.querySelector(".show-img") 
    const input = document.querySelector(".input-image")
    const buttonAddSubstratum = document.querySelector(".button-add-substratum")
    const buttonSendData = document.querySelector(".send-data")

    
    input.addEventListener("change",handleImage)    
    showImage.addEventListener("load",(e)=>{
        e.target.style.opacity = 1
    })
    buttonAddSubstratum.addEventListener("click",addSubstratumSelectionToDom)
    buttonSendData.addEventListener("click",checkPercentagesAre100)

    function handleImage(){
        const currentFile = input.files[input.files.length-1]
        loadImageToBackground(currentFile,showImage)
        const reader = new FileReader()
        const blobImage = new Blob([currentFile])
        reader.onloadend = ()=>{
            console.log(reader.result)
        }
        reader.readAsArrayBuffer(blobImage)
    }
    function loadImageToBackground(currentFile,imgElement){
        const src = URL.createObjectURL(currentFile)
        imgElement.src = src
    }
    
    function checkPercentagesAre100(){
        const allInputs = document.querySelectorAll(".substratum-number")  
        let sum = 0

        allInputs.forEach((n)=>{
            sum+= n.valueAsNumber
        })
      
        return sum == 100
    }

    //adds the html element to insert the substratum quantity
    function addSubstratumSelectionToDom(){
        if(substratums?.length ==0){
            alert("No se han podido cargar los sustratos")
            return
        }
        //main div that will be added to the dom, its a row that contains a column and a delete button
        const main = document.createElement("div")
        main.className = "substratum-container-row"

        //main column
        const mainCol = document.createElement("div")
        mainCol.className = "substratum-container-col"

        //Create the select and load with all the options that came from the API
        const select = document.createElement("select")
        substratums.forEach(s=>{
            const option = document.createElement("option")
            option.value = s.value
            option.textContent = s.name
            select.appendChild(option)
        })
        mainCol.appendChild(select)

        //percentage of that substratum
        const inputNumber = document.createElement("input")
        inputNumber.className="substratum-number"
        inputNumber.type = "number"
        inputNumber.placeholder ="Porcentaje"
        mainCol.appendChild(inputNumber)

        //add the whole column to the main div
        main.appendChild(mainCol)

        //button to remove the element
        const removeButton = document.createElement("button")
        removeButton.className = "button-remove-substratum"
        removeButton.textContent="X"
        removeButton.addEventListener("click",()=>main.remove())
        main.appendChild(removeButton)
        //append it to the dom
        document.querySelector(".substratum-section").appendChild(main)
    }
</script>

<style is:inline> 
    .content{
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        transition: all 0.2s ease-in;
        overflow: hidden;
    }
    .label-upload-image{
        color: black;
        cursor: pointer;
        padding: 20px;
        background-color: wheat;
        border-radius: 10px;
        font-size: xx-large;
        font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .form-container{
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 20px;
    }
    img{
        max-width: 50%;
        opacity: 0;
        transition: all 0.2s ease;
        -webkit-transition: all 0.2s ease; 
        -moz-transition: all 0.2s ease; 
        -ms-transition: all 0.2s ease; 
        -o-transition: all 0.2s ease; 
    }

    .substratum-section{
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }
    .substratum-container-row{
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        gap: 10px;
       
    }
    .button-remove-substratum{
        font-size: xx-large;
        background-color: wheat;
        color: rgb(233, 69, 69);
        border-width: 0px;
        cursor: pointer;
    }
    .substratum-container-col{
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        width: 100%;
    }
    .substratum-container-col input{
        width: 200px;
        padding: 0px;
        box-sizing: border-box;
        font-size: x-large;
    }.substratum-container-col select{
        width: 200px;
        font-size: x-large;
    }
    .button-add-substratum{
        background-color: wheat;
        color: rgb(0, 0, 0);
        border-radius: 10px;
        border-width: 0px;
        cursor: pointer;
        font-size: large;
        padding: 10px;
        margin: 10px;
        font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    .send-data{
        background-color: wheat;
        font-size: xx-large;
        cursor: pointer;
        border-width: 0px;
        border-radius: 10px;
    }


</style>